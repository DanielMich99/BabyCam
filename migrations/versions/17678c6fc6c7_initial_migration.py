"""Initial migration

Revision ID: 17678c6fc6c7
Revises: 
Create Date: 2025-03-31 21:33:38.193509

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '17678c6fc6c7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_files_id', table_name='files')
    op.drop_table('files')
    op.drop_index('ix_baby_profiles_id', table_name='baby_profiles')
    op.drop_table('baby_profiles')
    op.drop_index('ix_detection_results_id', table_name='detection_results')
    op.drop_table('detection_results')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('detection_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('detected_object', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='detection_results_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='detection_results_pkey')
    )
    op.create_index('ix_detection_results_id', 'detection_results', ['id'], unique=False)
    op.create_table('baby_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sensitivity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('medical_condition', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('profile_picture', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dangerous_objects', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='baby_profiles_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='baby_profiles_pkey')
    )
    op.create_index('ix_baby_profiles_id', 'baby_profiles', ['id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='files_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='files_pkey')
    )
    op.create_index('ix_files_id', 'files', ['id'], unique=False)
    # ### end Alembic commands ###
